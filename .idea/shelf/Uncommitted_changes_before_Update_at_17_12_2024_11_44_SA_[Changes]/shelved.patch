Index: src/main/java/org/example/rewardmanagementsystem/AdminController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.rewardmanagementsystem;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.collections.transformation.FilteredList;\r\nimport javafx.collections.transformation.SortedList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport java.net.URL;\r\nimport java.sql.*;\r\nimport java.util.Date;\r\nimport java.util.Optional;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AdminController implements Initializable {\r\n\r\n    @FXML\r\n    private ChoiceBox<String> addAcademicPerformance;\r\n\r\n    @FXML\r\n    private Button addAdd;\r\n\r\n    @FXML\r\n    private Button addBtn;\r\n\r\n    @FXML\r\n    private TextField addChildID;\r\n\r\n    @FXML\r\n    private TextField addChildName;\r\n\r\n    @FXML\r\n    private TextField addClass;\r\n\r\n    @FXML\r\n    private Button addClear;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColAcademicPerformance;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColChildID;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColChildName;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColClass;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColDOB;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColHouseholdID;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> addColSchool;\r\n\r\n    @FXML\r\n    private TextField addDOB;\r\n\r\n    @FXML\r\n    private Button addDelete;\r\n\r\n    @FXML\r\n    private AnchorPane addForm;\r\n\r\n    @FXML\r\n    private TextField addHouseholdID;\r\n\r\n    @FXML\r\n    private TextField addSchool;\r\n\r\n    @FXML\r\n    private TableView<ChildrenData> addTableView;\r\n\r\n    @FXML\r\n    private Button addUpdate;\r\n\r\n    @FXML\r\n    private Button homeBtn;\r\n\r\n    @FXML\r\n    private AnchorPane homeForm;\r\n\r\n    @FXML\r\n    private Button logoutBtn;\r\n\r\n    @FXML\r\n    private Button rewardBtn;\r\n\r\n    @FXML\r\n    private TextField rewardChildID;\r\n\r\n    @FXML\r\n    private Button rewardClearBtn;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColChildID;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColChildName;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColHouseholdID;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColQuantity;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColReward;\r\n\r\n    @FXML\r\n    private TableColumn<?, ?> rewardColValue;\r\n\r\n    @FXML\r\n    private AnchorPane rewardForm;\r\n\r\n    @FXML\r\n    private TextField rewardHouseholdID;\r\n\r\n    @FXML\r\n    private TextField rewardChildName;\r\n\r\n    @FXML\r\n    private TextField rewardQuantity;\r\n\r\n    @FXML\r\n    private TextField rewardReward;\r\n\r\n    @FXML\r\n    private TableView<ChildrenData> rewardTableView;\r\n\r\n    @FXML\r\n    private Button rewardUpdateBtn;\r\n\r\n    @FXML\r\n    private TextField rewardValue;\r\n\r\n    @FXML\r\n    private TextField search;\r\n\r\n    @FXML\r\n    private Label userName;\r\n\r\n    @FXML\r\n    private TextField addSearch;\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        addAcademicPerformance.getItems().add(\"Excellent\");\r\n        addAcademicPerformance.getItems().add(\"Good\");\r\n        addChildrenShowListData();\r\n        try {\r\n            rewardChildrenShowListData();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    private Connection connect;\r\n    private Statement statement;\r\n    private PreparedStatement prepare;\r\n    private ResultSet resultSet;\r\n    private Alert alert;\r\n\r\n//Phuong thuc logout\r\n    public void logout() {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setTitle(\"Confirmation Message\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(\"Are you sure you want to log out?\");\r\n        Optional<ButtonType> result = alert.showAndWait();\r\n\r\n        try {\r\n            if (result.get().equals(ButtonType.OK)) {\r\n                //Quay ve sign in sign up dien sau\r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    //Hien ten username\r\n    public void displayUsername(){\r\n        userName.setText(GetData.username);\r\n    }\r\n\r\n    //Lay du lieu co san tu table child\r\n    public ObservableList<ChildrenData> addChildrenListData(){\r\n        ObservableList<ChildrenData> listData = FXCollections.observableArrayList();\r\n        String sql = \"Select * from child\";\r\n        connect = database.connectDb();\r\n        try{\r\n            prepare = connect.prepareStatement(sql);\r\n            resultSet = prepare.executeQuery();\r\n            ChildrenData childrenD;\r\n\r\n            while (resultSet.next()) {\r\n                childrenD = new ChildrenData(resultSet.getString(\"ChildID\"),\r\n                        resultSet.getString(\"Name\"),\r\n                        resultSet.getDate(\"DOB\"),\r\n                        resultSet.getString(\"School\"),\r\n                        resultSet.getString(\"Class\"),\r\n                        resultSet.getString(\"AcademicPerformance\"),\r\n                        resultSet.getString(\"HouseholdID\"));\r\n                listData.add(childrenD);\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return listData;\r\n    }\r\n\r\n    public void addChildrenSelect(){\r\n        ChildrenData childrenDa = (ChildrenData) addTableView.getSelectionModel().getSelectedItem();\r\n        int num = addTableView.getSelectionModel().getSelectedIndex();\r\n        if((num - 1) < -1){\r\n            return;\r\n        }\r\n\r\n        addColChildID.setText(String.valueOf(childrenDa.getChildID()));\r\n        addColChildName.setText(String.valueOf(childrenDa.getChildName()));\r\n        addColClass.setText(String.valueOf(childrenDa.getChildClass()));\r\n        addColDOB.setText(String.valueOf(childrenDa.getChildDOB()));\r\n        addColHouseholdID.setText(String.valueOf(childrenDa.getHouseholdID()));\r\n        addColSchool.setText(String.valueOf(childrenDa.getChildSchool()));\r\n        addColAcademicPerformance.setText(String.valueOf(childrenDa.getAcademicPerformance()));\r\n\r\n    }\r\n\r\n    //Them tre nho vao database\r\n    public void addChildrenAdd(){\r\n        String sql = \"INSERT INTO child VALUES(?,?,?,?,?,?,?)\";\r\n        connect = database.connectDb();\r\n\r\n        try{\r\n            if(addChildID.getText().isEmpty()\r\n            || addChildName.getText().isEmpty()\r\n                || addClass.getText().isEmpty()\r\n                || addDOB.getText().isEmpty()\r\n                || addHouseholdID.getText().isEmpty()\r\n                || addSchool.getText().isEmpty()\r\n                ||addAcademicPerformance.getValue().equals(\"\"))\r\n            //|| GetData.path == null || GetData.path == \"\")\r\n                {\r\n                alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Error\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Please enter all the fields correctly.\");\r\n                alert.showAndWait();\r\n            }\r\n            else {\r\n                String check = \"Select ChildID from child Where ChildID= \" + \"'\" + addChildID.getText() + \"'\";\r\n                statement = connect.createStatement();\r\n                resultSet = statement.executeQuery(check);\r\n                if (resultSet.next()) {\r\n                    alert = new Alert(Alert.AlertType.ERROR);\r\n                    alert.setTitle(\"Error\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"ChildID: \" + addChildID.getText() + \" already exists.\");\r\n                    alert.showAndWait();\r\n                } else {\r\n                    prepare = connect.prepareStatement(sql);\r\n                    prepare.setString(1,  addChildID.getText());\r\n                    prepare.setString(2, addChildName.getText() );\r\n                    prepare.setString(3,  addDOB.getText() );\r\n                    prepare.setString(4,  addSchool.getText() );\r\n                    prepare.setString(5,  addClass.getText() );\r\n                    prepare.setString(6, addAcademicPerformance.getValue().toString());\r\n                    prepare.setString(7,  addHouseholdID.getText() );\r\n\r\n                    /*String uri = GetData.path;\r\n                    uri = uri.replace(\"\\\\\", \"\\\\\\\\\");\r\n                    prepare.setString(8, uri);\r\n                    prepare.setString(9, String.valueOf(sqlDate.getTime()));\r\n                     */\r\n                    prepare.executeUpdate();\r\n\r\n\r\n                    alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Information Message\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"Successfully added child.\");\r\n                    alert.showAndWait();\r\n                    addChildrenShowListData();\r\n                    addChildReset();\r\n                }\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    //reset thong tin da nhap\r\n    public void addChildReset(){\r\n        addChildID.setText(\"\");\r\n        addChildName.setText(\"\");\r\n        addClass.setText(\"\");\r\n        addDOB.setText(\"\");\r\n        addHouseholdID.setText(\"\");\r\n        addSchool.setText(\"\");\r\n        addAcademicPerformance.setValue(\"\");\r\n        GetData.path = \"\";\r\n\r\n    }\r\n\r\n    //Update thong tin tre nho\r\n    public void addChildUpdate(){\r\n        String sql = \"UPDATE child SET Name = \" + \"'\" + addChildName.getText() + \"',\"\r\n                + \"Class= \" + \"'\" + addClass.getText() + \"',\"\r\n                + \"DOB= \" + \"'\" + addDOB.getText() + \"',\"\r\n                + \"HouseholdID = \" + \"'\" + addHouseholdID.getText() + \"',\"\r\n                + \"School= \" + \"'\" + addSchool.getText() + \"',\"\r\n                + \"AcademicPerformance= \" + \"'\" + addAcademicPerformance.getValue() + \"'\"\r\n                + \"WHERE ChildID = \" + \"'\" + addChildID.getText() + \"';\";\r\n\r\n        connect = database.connectDb();\r\n\r\n        try{\r\n            if(addChildID.getText().isEmpty()\r\n                    || addChildName.getText().isEmpty()\r\n                    || addClass.getText().isEmpty()\r\n                    || addDOB.getText().isEmpty()\r\n                    || addHouseholdID.getText().isEmpty()\r\n                    || addSchool.getText().isEmpty()\r\n                    || addAcademicPerformance.getValue().equals(\"\")\r\n                     )\r\n            //|| GetData.path == null || GetData.path == \"\")\r\n            {\r\n                alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Error\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Please enter all the fields correctly.\");\r\n                alert.showAndWait();\r\n            }\r\n            else {\r\n                alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Confirmation Message\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Are you sure you want to update this child?\");\r\n                Optional<ButtonType> result = alert.showAndWait();\r\n                if (result.get() == ButtonType.OK) {\r\n                    statement = connect.prepareStatement(sql);\r\n                    statement.executeUpdate(sql);\r\n\r\n                    alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Information Message\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"Successfully update child.\");\r\n                    alert.showAndWait();\r\n\r\n                    addChildrenShowListData();\r\n                    addChildReset();\r\n                }\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //Delete thong tin tre nho\r\n    public void addChildDelete(){\r\n        String sql = \"DELETE FROM child WHERE ChildID = \" + \"'\" + addChildID.getText() + \"';\";\r\n        connect = database.connectDb();\r\n        try{\r\n            if(addChildID.getText().isEmpty()\r\n                    || addChildName.getText().isEmpty()\r\n                    || addClass.getText().isEmpty()\r\n                    || addDOB.getText().isEmpty()\r\n                    || addHouseholdID.getText().isEmpty()\r\n                    || addSchool.getText().isEmpty()\r\n                     || addAcademicPerformance.getValue().equals(\"\"))\r\n            //|| GetData.path == null || GetData.path == \"\")\r\n            {\r\n                alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Error\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Please enter all the fields correctly.\");\r\n                alert.showAndWait();\r\n            }\r\n            else{\r\n                alert = new Alert(Alert.AlertType.INFORMATION);\r\n                alert.setTitle(\"Confirmation Message\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Are you sure you want to delete this child's information?\");\r\n                Optional<ButtonType> result = alert.showAndWait();\r\n\r\n                if (result.get() == (ButtonType.OK)) {\r\n                    statement = connect.prepareStatement(sql);\r\n                    statement.executeUpdate(sql);\r\n\r\n                    alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Information Message\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"Successfully deleted child.\");\r\n\r\n                    addChildrenShowListData();\r\n                    addChildReset();\r\n                }\r\n\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    //\r\n    private ObservableList<ChildrenData> addChildList;\r\n    public void addChildrenShowListData(){\r\n        addChildList = addChildrenListData();\r\n        addColChildID.setCellValueFactory(new PropertyValueFactory<>(\"childID\"));\r\n        addColChildName.setCellValueFactory(new PropertyValueFactory<>(\"childName\"));\r\n        addColDOB.setCellValueFactory(new PropertyValueFactory<>(\"childDOB\"));\r\n        addColHouseholdID.setCellValueFactory(new PropertyValueFactory<>(\"HouseholdID\"));\r\n        addColSchool.setCellValueFactory(new PropertyValueFactory<>(\"childSchool\"));\r\n        addColClass.setCellValueFactory(new PropertyValueFactory<>(\"childClass\"));\r\n        addColAcademicPerformance.setCellValueFactory(new PropertyValueFactory<>(\"AcademicPerformance\"));\r\n\r\n        addTableView.setItems(addChildList);\r\n    }\r\n\r\n    //Phuong thuc tim kiem thong tin tre em(dang loi~)\r\npublic void addChildrenSearch(){\r\n    FilteredList<ChildrenData> filteredList = new FilteredList<>(addChildList, e-> true);\r\n    addSearch.textProperty().addListener((Observable, oldValue, newValue) -> {\r\n        filteredList.setPredicate(predicateData ->{\r\n            if(newValue == null || newValue.isEmpty()){\r\n            return false;}\r\n\r\n            String searchKey = newValue;\r\n            if(predicateData.getChildID().toLowerCase().contains(searchKey)) {\r\n                return true;\r\n            }\r\n             else if(predicateData.getChildName().toLowerCase().contains(searchKey)) {\r\n                 return true;\r\n             }\r\n             else if(predicateData.getChildClass().toLowerCase().contains(searchKey)) {\r\n                 return true;\r\n             }\r\n             else if(predicateData.getHouseholdID().toLowerCase().contains(searchKey)) {\r\n                 return true;\r\n             }\r\n             else if(predicateData.getChildSchool().toLowerCase().contains(searchKey)) {\r\n                 return true;\r\n             }\r\n             else if(predicateData.getChildDOB().toString().toLowerCase().contains(searchKey)){\r\n                 return true;\r\n             }\r\n             else if(predicateData.getAcademicPerformance().toLowerCase().contains(searchKey)) {\r\n                 return true;\r\n             }\r\n             else return false;\r\n        });\r\n    });\r\n\r\n    SortedList<ChildrenData> sortedList = new SortedList<>(filteredList);\r\n    sortedList.comparatorProperty().bind(addTableView.comparatorProperty());\r\n    addTableView.setItems(sortedList);\r\n\r\n}\r\n    //Phuong thuc chon form home, addchild, reward\r\n    public void switchForm(ActionEvent event){\r\n        if(event.getSource() == homeBtn){\r\n            homeForm.setVisible(true);\r\n            addForm.setVisible(false);\r\n            rewardForm.setVisible(false);\r\n        }\r\n        else if(event.getSource() == addBtn){\r\n            homeForm.setVisible(false);\r\n            addForm.setVisible(true);\r\n            rewardForm.setVisible(false);\r\n            addChildrenSearch();\r\n        }\r\n        else if(event.getSource() == rewardBtn){\r\n            homeForm.setVisible(false);\r\n            addForm.setVisible(false);\r\n            rewardForm.setVisible(true);\r\n        }\r\n    }\r\n\r\n\r\n    //Tuong tac voi reward Allocation\r\n    public ObservableList<ChildrenData> rewardChildrenList() {\r\n        ObservableList<ChildrenData> childrenList = FXCollections.observableArrayList();\r\n        String sql = \"Select c.ChildID, c.Name, c.HouseholdID, rwf.RewardName, rwt.Quantity, rwt.TotalOfReward from child c\\n\" +\r\n                \"left join rewardtype rwt on c.AcademicPerformance = rwt.AcademicPerformance\\n\" +\r\n                \"left join rewardfund rwf on rwt.RewardID = rwf.RewardID\";\r\n        connect = database.connectDb();\r\n        try {\r\n            prepare = connect.prepareStatement(sql);\r\n            resultSet = prepare.executeQuery();\r\n            ChildrenData childrenR;\r\n            while (resultSet.next()) {\r\n                childrenR = new ChildrenData(resultSet.getString(\"ChildID\"),\r\n                        resultSet.getString(\"Name\"),\r\n                        resultSet.getString(\"HouseholdID\"),\r\n                        resultSet.getString(\"RewardName\"),\r\n                        resultSet.getInt(\"Quantity\"),\r\n                        resultSet.getInt(\"TotalOfReward\"));\r\n                childrenList.add(childrenR);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return childrenList;\r\n    }\r\n\r\n    private ObservableList<ChildrenData> rewardUpdateList = FXCollections.observableArrayList();\r\n\r\n    public ObservableList<ChildrenData> rewardUpdateListData() throws SQLException {\r\n        if (rewardChildID.getText().isEmpty()\r\n                || rewardChildName.getText().isEmpty()\r\n                || rewardHouseholdID.getText().isEmpty()\r\n                || rewardReward.getText().isEmpty()\r\n                || rewardQuantity.getText().isEmpty()\r\n                || rewardValue.getText().isEmpty()) {\r\n            return null;\r\n        } else {\r\n            rewardUpdateList.add(new ChildrenData(rewardChildID.getText(), rewardChildName.getText(), rewardHouseholdID.getText(), rewardReward.getText(), Integer.parseInt(rewardQuantity.getText()), Integer.parseInt(rewardValue.getText())));\r\n            String sql = \"Insert into bonusreward (ChildID, ChildName, HouseholdID, RewardName, Quantity, Value) values(?,?,?,?,?,?)\";\r\n            connect = database.connectDb();\r\n            prepare = connect.prepareStatement(sql);\r\n            prepare.setString(1, rewardChildID.getText());\r\n            prepare.setString(2, rewardChildName.getText());\r\n            prepare.setString(3, rewardHouseholdID.getText());\r\n            prepare.setString(4, rewardReward.getText());\r\n            prepare.setInt(5, Integer.parseInt(rewardQuantity.getText()));\r\n            prepare.setInt(6, Integer.parseInt(rewardValue.getText()));\r\n            prepare.executeUpdate();\r\n\r\n            return rewardUpdateList;\r\n        }\r\n    }\r\n\r\n\r\n    private ObservableList<ChildrenData> rewardList, rewardList2 = FXCollections.observableArrayList();\r\n    public void rewardChildrenShowListData() throws SQLException {\r\n        ObservableList<ChildrenData> combineList = FXCollections.observableArrayList();\r\n        rewardList = rewardChildrenList();\r\n        combineList.addAll(rewardList);\r\n\r\n        String sql = \"Select * from bonusreward\";\r\n        Statement stmt = connect.createStatement();\r\n        ResultSet rs = stmt.executeQuery(sql);\r\n        while (rs.next()) {\r\n            String childID = rs.getString(\"ChildID\");\r\n            String childName = rs.getString(\"ChildName\");\r\n            String householdID = rs.getString(\"HouseholdID\");\r\n            String rewardName = rs.getString(\"RewardName\");\r\n            int quantity = rs.getInt(\"Quantity\");\r\n            int totalOfReward = rs.getInt(\"Value\");\r\n\r\n                rewardList2.add(new ChildrenData(childID, childName, householdID, rewardName, quantity, totalOfReward));\r\n        }\r\n        combineList.addAll(rewardList2);\r\n        rewardColChildID.setCellValueFactory(new PropertyValueFactory<>(\"childID\"));\r\n        rewardColChildName.setCellValueFactory(new PropertyValueFactory<>(\"childName\"));\r\n        rewardColHouseholdID.setCellValueFactory(new PropertyValueFactory<>(\"householdID\"));\r\n        rewardColReward.setCellValueFactory(new PropertyValueFactory<>(\"reward\"));\r\n        rewardColQuantity.setCellValueFactory(new PropertyValueFactory<>(\"quantity\"));\r\n        rewardColValue.setCellValueFactory(new PropertyValueFactory<>(\"value\"));\r\n        rewardTableView.setItems(combineList);\r\n\r\n        rewardTableView.sort();\r\n\r\n\r\n    }\r\n    public void rewardUpdate(ActionEvent event) throws SQLException {\r\n        if(rewardChildID.getText().isEmpty()\r\n                ||rewardChildName.getText().isEmpty()\r\n                ||rewardHouseholdID.getText().isEmpty()\r\n                ||rewardReward.getText().isEmpty()\r\n                ||rewardQuantity.getText().isEmpty()\r\n                ||rewardValue.getText().isEmpty())\r\n        {\r\n            alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Error\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Please enter all the fields correctly.\");\r\n            alert.showAndWait();\r\n        }\r\n\r\n        else{\r\n            rewardUpdateListData();\r\n            rewardChildrenShowListData();\r\n            alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"Complete!\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Successfully updated child.\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n    //reset bang reward\r\n    public void rewardReset(ActionEvent event) throws SQLException {\r\n        rewardChildrenShowListData();\r\n    }\r\n\r\n    //clear bang reward\r\n    public void rewardClear(ActionEvent event){\r\n        rewardChildID.setText(\"\");\r\n        rewardChildName.setText(\"\");\r\n        rewardHouseholdID.setText(\"\");\r\n        rewardReward.setText(\"\");\r\n        rewardQuantity.setText(\"\");\r\n        rewardValue.setText(\"\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/rewardmanagementsystem/AdminController.java b/src/main/java/org/example/rewardmanagementsystem/AdminController.java
--- a/src/main/java/org/example/rewardmanagementsystem/AdminController.java	(revision 7d135e035ee0af4a40f189013f0b6191157bd935)
+++ b/src/main/java/org/example/rewardmanagementsystem/AdminController.java	(date 1734410634646)
@@ -403,6 +403,7 @@
                     alert.setTitle("Information Message");
                     alert.setHeaderText(null);
                     alert.setContentText("Successfully deleted child.");
+                    alert.showAndWait();
 
                     addChildrenShowListData();
                     addChildReset();
Index: src/main/java/org/example/rewardmanagementsystem/SignInController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.rewardmanagementsystem;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\nimport org.w3c.dom.events.MouseEvent;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class SignInController implements Initializable {\r\n\r\n    @FXML\r\n    private Label forgetLabel;\r\n\r\n    @FXML\r\n    private Button loginBtn;\r\n\r\n    @FXML\r\n    private PasswordField passwordTF;\r\n\r\n    @FXML\r\n    private TextField userNameTF;\r\n\r\n    @FXML\r\n    private Label welcome_back_label;\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n    }\r\n\r\n    private Connection connect;\r\n    private PreparedStatement prepare;\r\n    private ResultSet rs;\r\n\r\n    public void logIn(ActionEvent actionEvent) {\r\n        if(userNameTF.getText().isEmpty() || passwordTF.getText().isEmpty()) {\r\n            userNameTF.clear();\r\n            passwordTF.clear();\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Error\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Please fill all the fields\");\r\n            alert.showAndWait();\r\n\r\n        }\r\n        else{\r\n            int count = 0;\r\n            String sql =\"select count(*) from account where Account=? and Password=?\";\r\n            connect = database.connectDb();\r\n\r\n            try{\r\n                prepare = connect.prepareStatement(sql);\r\n                prepare.setString(1, userNameTF.getText());\r\n                prepare.setString(2, passwordTF.getText());\r\n\r\n                rs = prepare.executeQuery();\r\n\r\n                if(rs.next()) {\r\n                    count = rs.getInt(1);\r\n                }\r\n\r\n                if(count == 1) {\r\n                    String sql2 = \"select householdID from account where Account=?\";\r\n                    connect = database.connectDb();\r\n                    try{\r\n                        prepare = connect.prepareStatement(sql2);\r\n                        prepare.setString(1, userNameTF.getText());\r\n                        rs = prepare.executeQuery();\r\n                        if(rs.next()) {\r\n                            String householdID = rs.getString(1);\r\n\r\n                            if(householdID.equals(\"HH00\")) {\r\n                                Parent root = FXMLLoader.load(getClass().getResource(\"/FxmlFile/AdminScene.fxml\"));\r\n                                Stage stage = new Stage();\r\n                                stage.setScene(new Scene(root));\r\n                                stage.show();\r\n                                loginBtn.getScene().getWindow().hide();\r\n                            }\r\n\r\n                            //scene cua phu huynh\r\n                            else{\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    catch(SQLException e) {\r\n                        e.printStackTrace();\r\n                    } catch (IOException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                }\r\n\r\n            } catch (SQLException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void forget(MouseEvent actionEvent) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/rewardmanagementsystem/SignInController.java b/src/main/java/org/example/rewardmanagementsystem/SignInController.java
--- a/src/main/java/org/example/rewardmanagementsystem/SignInController.java	(revision 7d135e035ee0af4a40f189013f0b6191157bd935)
+++ b/src/main/java/org/example/rewardmanagementsystem/SignInController.java	(date 1734410634646)
@@ -100,6 +100,15 @@
                         throw new RuntimeException(e);
                     }
                 }
+                else{
+                    Alert alert = new Alert(Alert.AlertType.ERROR);
+                    alert.setTitle("Error");
+                    alert.setHeaderText(null);
+                    alert.setContentText("Incorrect Password");
+                    alert.showAndWait();
+                    userNameTF.clear();
+                    passwordTF.clear();
+                }
 
             } catch (SQLException e) {
                 throw new RuntimeException(e);
Index: src/main/java/org/example/rewardmanagementsystem/SignUpController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.rewardmanagementsystem;\r\n\r\npublic class SignUpController {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/rewardmanagementsystem/SignUpController.java b/src/main/java/org/example/rewardmanagementsystem/SignUpController.java
--- a/src/main/java/org/example/rewardmanagementsystem/SignUpController.java	(revision 7d135e035ee0af4a40f189013f0b6191157bd935)
+++ b/src/main/java/org/example/rewardmanagementsystem/SignUpController.java	(date 1734410634647)
@@ -1,4 +1,128 @@
 package org.example.rewardmanagementsystem;
 
-public class SignUpController {
-}
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.Initializable;
+import javafx.scene.control.*;
+
+import java.net.URL;
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.ResourceBundle;
+
+public class SignUpController implements Initializable {
+
+    @FXML
+    private Label create_an_account_label;
+
+    @FXML
+    private Button signUpButton;
+
+    @FXML
+    private TextField signUpHHID;
+
+    @FXML
+    private PasswordField signUpPassword;
+
+    @FXML
+    private PasswordField signUpReEnter;
+
+    @FXML
+    private TextField signUpUserName;
+
+    @Override
+    public void initialize(URL url, ResourceBundle resourceBundle) {
+
+    }
+
+
+    private Connection connect;
+    private PreparedStatement prepare;
+    private ResultSet rs;
+
+    public void signUp(ActionEvent actionEvent) throws SQLException {
+
+        String userName = signUpUserName.getText();
+        String sql2 = "Select * from account where Account = ?";
+        connect = database.connectDb();
+        prepare = connect.prepareStatement(sql2);
+        prepare.setString(1, userName);
+        rs = prepare.executeQuery();
+        //oke
+        if(signUpUserName.getText().isEmpty() || signUpPassword.getText().isEmpty() || signUpReEnter.getText().isEmpty() || signUpHHID.getText().isEmpty()) {
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Error");
+            alert.setHeaderText(null);
+            alert.setContentText("Please fill all the fields");
+            alert.showAndWait();
+            signUpUserName.clear();
+            signUpPassword.clear();
+            signUpReEnter.clear();
+            signUpHHID.clear();
+        }
+        else if(signUpHHID.getText().equals("HH00")){
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Error");
+            alert.setHeaderText(null);
+            alert.setContentText("Cannot create account with this HouseholdID");
+            alert.showAndWait();
+            signUpUserName.clear();
+            signUpPassword.clear();
+            signUpReEnter.clear();
+            signUpHHID.clear();
+        }
+
+        //oke
+        else if (rs.next()) {
+
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Error");
+            alert.setHeaderText(null);
+            alert.setContentText("Username already exists");
+            alert.showAndWait();
+            signUpUserName.clear();
+            signUpHHID.clear();
+            signUpPassword.clear();
+            signUpReEnter.clear();
+        }
+
+
+        else if(!signUpPassword.getText().equals(signUpReEnter.getText())) {
+            Alert alert = new Alert(Alert.AlertType.ERROR);
+            alert.setTitle("Error");
+            alert.setHeaderText(null);
+            alert.setContentText("Passwords do not match");
+            alert.showAndWait();
+        }
+            else {
+            String sql = "insert into account values(?,?,?)";
+            connect = database.connectDb();
+
+            prepare = connect.prepareStatement(sql);
+            prepare.setString(1, signUpUserName.getText());
+            prepare.setString(2, signUpPassword.getText());
+            prepare.setString(3, signUpHHID.getText());
+            int row = prepare.executeUpdate();
+            if (row > 0) {
+                Alert alert = new Alert(Alert.AlertType.INFORMATION);
+                alert.setTitle("Success");
+                alert.setHeaderText(null);
+                alert.setContentText("Account created successfully");
+                alert.showAndWait();
+            }
+            else{
+                Alert alert = new Alert(Alert.AlertType.ERROR);
+                alert.setTitle("Error");
+                alert.setHeaderText(null);
+                alert.setContentText("Failed to create account");
+                alert.showAndWait();
+                signUpHHID.clear();
+                signUpPassword.clear();
+                signUpReEnter.clear();
+                signUpUserName.clear();
+            }
+        }
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AnalysisUIOptions\">\r\n    <option name=\"SCOPE_TYPE\" value=\"3\" />\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2dc1303f-1c3c-4a0c-a5ef-620b864ba5fd\" name=\"Changes\" comment=\"fix bug\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/FxmlFile/ParentScene.fxml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/FxmlFile/css/ParentScene_style.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"CSS File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"38391514cb6a77e5f32bb0d10dbb49cf36bc37d3\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;PearlHanh&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/XuanPhuc269/Reward-Management-System.git\",\r\n    \"accountId\": \"88b30b4d-569f-4fc6-aa94-ede38a563067\"\r\n  }\r\n}]]></component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2q7iePcldzp8ucWCzSekMdIZaOM\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.AdminInterface.executor\": \"Run\",\r\n    \"Application.DatabaseConnection.executor\": \"Run\",\r\n    \"Application.HelloApplication.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Admin/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Scene Builder/SceneBuilder.lnk\",\r\n    \"list.type.of.created.stylesheet\": \"CSS\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"mysql_aurora_aws\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.AdminInterface\">\r\n    <configuration name=\"AdminInterface\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.rewardmanagementsystem.AdminInterface\" />\r\n      <module name=\"Reward-Management-System\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.rewardmanagementsystem.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DatabaseConnection\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.rewardmanagementsystem.DatabaseConnection\" />\r\n      <module name=\"Reward-Management-System\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.rewardmanagementsystem.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.rewardmanagementsystem.HelloApplication\" />\r\n      <module name=\"Reward-Management-System\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.rewardmanagementsystem.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n        <item itemvalue=\"Application.DatabaseConnection\" />\r\n        <item itemvalue=\"Application.AdminInterface\" />\r\n        <item itemvalue=\"Application.AdminInterface\" />\r\n        <item itemvalue=\"Application.DatabaseConnection\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.22562.145\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-IU-243.22562.145\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2dc1303f-1c3c-4a0c-a5ef-620b864ba5fd\" name=\"Changes\" comment=\"\" />\r\n      <created>1734020108769</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734020108769</updated>\r\n      <workItem from=\"1734020109907\" duration=\"405000\" />\r\n      <workItem from=\"1734064526390\" duration=\"674000\" />\r\n      <workItem from=\"1734065218747\" duration=\"156000\" />\r\n      <workItem from=\"1734065425993\" duration=\"81000\" />\r\n      <workItem from=\"1734065512304\" duration=\"15142000\" />\r\n      <workItem from=\"1734110271470\" duration=\"4248000\" />\r\n      <workItem from=\"1734150620448\" duration=\"2871000\" />\r\n      <workItem from=\"1734158216084\" duration=\"4298000\" />\r\n      <workItem from=\"1734169588569\" duration=\"599000\" />\r\n      <workItem from=\"1734236544138\" duration=\"14121000\" />\r\n      <workItem from=\"1734317188330\" duration=\"10554000\" />\r\n      <workItem from=\"1734409612680\" duration=\"872000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"AdminScene\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734252543543</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734252543543</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"AdminScene\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734318919544</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734318919544</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"AdminScene\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734320570087</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734320570087</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fix bug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734407448618</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734407448618</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"fix bug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734407510163</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734407510163</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"AdminScene\" />\r\n    <MESSAGE value=\"fix bug\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix bug\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7d135e035ee0af4a40f189013f0b6191157bd935)
+++ b/.idea/workspace.xml	(date 1734410634645)
@@ -138,9 +138,9 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.AdminInterface" />
         <item itemvalue="Application.HelloApplication" />
         <item itemvalue="Application.DatabaseConnection" />
-        <item itemvalue="Application.AdminInterface" />
         <item itemvalue="Application.AdminInterface" />
         <item itemvalue="Application.DatabaseConnection" />
       </list>
